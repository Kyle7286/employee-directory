{"version":3,"sources":["util/API.js","util/Sort.js","components/Header/index.js","components/Search/index.js","components/Table/index.js","components/Container/index.js","App.js","index.js"],"names":["API","search","axios","get","Sort","sortTable","col","array","sortID","sort","sortArray","toLowerCase","propName","propName2","a","b","Header","className","Search","props","type","placeholder","id","onChange","handleInputChange","Table","scope","onClick","handleTableHeaderClick","data-sortid","nameSort","emailSort","phoneSort","dobSort","results","map","employee","alt","src","picture","thumbnail","name","first","last","email","phone","dob","convertDOB","Container","state","staticResults","visibleResults","event","preventDefault","target","innerHTML","getAttribute","aSorted","sSortName","setState","value","regex","filteredResults","filter","element","match","RegExp","this","getEmployees","then","res","alteredResults","data","catch","err","console","log","forEach","dobISO","date","Date","toLocaleDateString","month","year","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.606f4640.chunk.js","sourcesContent":["import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?results=100&inc=picture,name,phone,email,dob&nat=us\";\n\nconst API =  {\n  search: function() {\n    return axios.get(BASEURL)\n  }\n};\n\nexport default API;","const Sort = {\r\n    sortTable: function (col, array, sortID) {\r\n        switch (col) {\r\n            case \"Name\":\r\n                return array.sort(sortArray(sortID, col.toLowerCase(), \"first\"))\r\n            case 'DOB':\r\n                return array.sort(sortArray(sortID, col.toLowerCase(), \"date\"))\r\n            default:\r\n                return array.sort(sortArray(sortID, col.toLowerCase()))\r\n        }\r\n    }\r\n};\r\n\r\n// Sort the array by property(ies) given\r\nconst sortArray = (sortID, propName, propName2) =>\r\n    (a, b) => {\r\n        // If 1 argument was given\r\n        if (!propName2) {\r\n            if (sortID === \"0\" || sortID === \"-1\") {\r\n                return a[propName] === b[propName] ? 0 : a[propName] < b[propName] ? -1 : 1\r\n            } else {\r\n                return b[propName] === a[propName] ? 0 : b[propName] < a[propName] ? -1 : 1\r\n            }\r\n        // If 2 arguments were given\r\n        } else {\r\n            if (sortID === \"0\" || sortID === \"-1\") {\r\n                return a[propName][propName2] === b[propName][propName2] ? 0 : a[propName][propName2] < b[propName][propName2] ? -1 : 1\r\n            } else {\r\n                return b[propName][propName2] === a[propName][propName2] ? 0 : b[propName][propName2] < a[propName][propName2] ? -1 : 1\r\n\r\n            }\r\n        }\r\n    }\r\n\r\nexport default Sort;","function Header() {\n  return (\n    <div>\n      <div className=\"jumbotron jumbotron-fluid text-center bg-dark mb-4\">\n        <div className=\"container\">\n          <h1 className=\"display-4 font-weight-bold text-success\">Employee Directory</h1>\n          <p className=\"lead text-white\">Click on column headers to sort or use the search box to filter your results.</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","function Search(props) {\n  return (\n    <form className=\"search w-25 m-auto\">\n      <div className=\"form-group\">\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Filter...\"\n          id=\"search\"\n          onChange={props.handleInputChange}\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default Search;\n","import { FaChevronDown, FaChevronUp } from 'react-icons/fa';\n\nfunction Table(props) {\n  return (\n    <table className=\"table table-striped mt-5\">\n      <thead>\n          \n        <tr>\n          <th scope=\"col\" className=\"text-center\"><button onClick={props.handleTableHeaderClick} className=\"btn font-weight-bold shadow-none\">Image</button></th>\n          <th scope=\"col\" className=\"text-center\"><button data-sortid={props.nameSort} onClick={props.handleTableHeaderClick} className=\"btn font-weight-bold shadow-none\">Name</button>{props.nameSort === \"1\" ? <FaChevronUp /> : <FaChevronDown />}</th>\n          <th scope=\"col\" className=\"text-center\"><button data-sortid={props.emailSort} onClick={props.handleTableHeaderClick} className=\"btn font-weight-bold shadow-none\">Email</button>{props.emailSort === \"1\" ? <FaChevronUp /> : <FaChevronDown />}</th>\n          <th scope=\"col\" className=\"text-center\"><button data-sortid={props.phoneSort} onClick={props.handleTableHeaderClick} className=\"btn font-weight-bold shadow-none\">Phone</button>{props.phoneSort === \"1\" ? <FaChevronUp /> : <FaChevronDown />}</th>\n          <th scope=\"col\" className=\"text-center\"><button data-sortid={props.dobSort} onClick={props.handleTableHeaderClick} className=\"btn font-weight-bold shadow-none\">DOB</button>{props.dobSort === \"1\" ? <FaChevronUp /> : <FaChevronDown />}</th>\n        </tr>\n      </thead>\n      <tbody className=\"\">\n        {props.results.map(employee => (\n          <tr key={employee.phone}>\n            <td className=\"image text-center\"><img alt=\"employee profile\" src={employee.picture.thumbnail}></img></td>\n            <td className=\"name  text-center pt-4\">{employee.name.first} {employee.name.last}</td>\n            <td className=\"email text-center pt-4\">{employee.email}</td>\n            <td className=\"phone text-center pt-4\">{employee.phone}</td>\n            <td className=\"dob text-center pt-4\">{employee.dob.convertDOB}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;","import { Component } from \"react\";\r\nimport API from \"../../util/API\";\r\nimport Sort from \"../../util/Sort\"\r\nimport Header from \"../Header\";\r\nimport Search from \"../Search\";\r\nimport Table from \"../Table\";\r\n\r\nclass Container extends Component {\r\n    state = {\r\n        staticResults: [],\r\n        visibleResults: [],\r\n        search: \"\",\r\n        nameSort: \"0\",\r\n        emailSort: \"0\",\r\n        phoneSort: \"0\",\r\n        dobSort: \"0\",\r\n    };\r\n\r\n    // When this component mounts, fetch random employees\r\n    componentDidMount() {\r\n        this.getEmployees();\r\n    }\r\n\r\n    // Call random employees API and set the states with the results\r\n    getEmployees() {\r\n        API.search()\r\n            .then(res => {\r\n                // Add human readable date\r\n                let alteredResults = this.convertDOB([...res.data.results])\r\n     \r\n                this.setState(\r\n                    {\r\n                        staticResults: [...alteredResults],\r\n                        visibleResults: [...alteredResults]\r\n                    }\r\n                )\r\n\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Convert DOB to human readable\r\n    convertDOB(array) {\r\n        \r\n        // Loop thru each employee and add the convertedDOB property and value\r\n        array.forEach(employee => {\r\n            const dobISO = employee.dob.date;\r\n            const date = new Date(dobISO).toLocaleDateString('en-US', {\r\n                month: 'long',\r\n                year: 'numeric'\r\n            })\r\n            employee.dob['convertDOB'] = date;\r\n        });\r\n\r\n        return array\r\n    }\r\n\r\n    // Handle Table header clicking to sort\r\n    handleTableHeaderClick = async event => {\r\n        event.preventDefault();\r\n\r\n        // Send data over to Sort.js for sorting\r\n        const aSorted = await Sort.sortTable(event.target.innerHTML, [...this.state.visibleResults], event.target.getAttribute(\"data-sortid\"));\r\n\r\n        // Set sort to asc(1) or desc(-1) depending on what it was before and send it over to the element that was clicked\r\n        let sort = event.target.getAttribute(\"data-sortid\");\r\n        if (sort === \"0\" || sort === \"-1\") {\r\n            sort = \"1\"\r\n        } else {\r\n            sort = \"-1\"\r\n        }\r\n\r\n        // build the property name string based on element clicked\r\n        const sSortName = event.target.innerHTML.toLowerCase() + \"Sort\";\r\n\r\n        // If array is defined, then update the state with the sorted array and sortID\r\n        if (aSorted) {\r\n            this.setState(\r\n                {\r\n                    visibleResults: [...aSorted],\r\n                    [sSortName]: sort\r\n                })\r\n        }\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        // Update state with user input to render page dynamically\r\n        this.setState({ search: event.target.value });\r\n\r\n        // Assign value to a variable for easier use\r\n        let regex = event.target.value\r\n\r\n        // Filter the spread of static data based off user input, matching multiple properties\r\n        let filteredResults = ([...this.state.staticResults].filter(function (element) {\r\n            return (element.name.first + \" \" + element.name.last).match(new RegExp(regex, 'gi'))\r\n                || element.phone.match(new RegExp(regex, 'gi'))\r\n                || element.email.match(new RegExp(regex, 'gi'))\r\n        })\r\n        );\r\n\r\n        // Update visibleResults state if an array is returned\r\n        if (filteredResults) {\r\n            this.setState(\r\n                {\r\n                    visibleResults: filteredResults\r\n                }\r\n            )\r\n        }\r\n    };\r\n\r\n    // Render Component\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Search\r\n                    handleInputChange={this.handleInputChange} />\r\n                <Table\r\n                    results={this.state.visibleResults}\r\n                    handleTableHeaderClick={this.handleTableHeaderClick}\r\n                    nameSort={this.state.nameSort}\r\n                    emailSort={this.state.emailSort}\r\n                    phoneSort={this.state.phoneSort}\r\n                    dobSort={this.state.dobSort}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react';\nimport Container from \"./components/Container\"\n\nfunction App() {\n  return <Container />;\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}